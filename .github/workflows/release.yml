name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for git describe to work

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Get version from git
        id: version
        run: |
          VERSION=$(git describe --tags --exact-match HEAD 2>/dev/null || git describe --tags --always --dirty=-SNAPSHOT)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"

      - name: Build and test
        run: ./gradlew build

      - name: Build shadow JAR
        run: ./gradlew shadowJar

      - name: Get JAR filename
        id: jar
        run: |
          JAR_FILE=$(find app/build/libs -name "brokk-*.jar" | head -1)
          JAR_NAME=$(basename "$JAR_FILE")
          echo "jar_file=$JAR_FILE" >> $GITHUB_OUTPUT
          echo "jar_name=$JAR_NAME" >> $GITHUB_OUTPUT
          echo "Found JAR: $JAR_NAME"

      - name: Create GitHub Release and Upload Asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          files: ${{ steps.jar.outputs.jar_file }}
          token: ${{ secrets.GITHUB_TOKEN }}


      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: brokk-${{ steps.version.outputs.version }}
          path: |
            app/build/libs/*.jar
            !app/build/libs/*-sources.jar
            !app/build/libs/*-javadoc.jar
          retention-days: 90


      - name: Update package.json with JAR name
        run: |
          jq '.jdeploy.jar = "${{ steps.jar.outputs.jar_file }}"' package.json > package.tmp.json && mv package.tmp.json package.json

      - name: Build App Installer Bundles
        uses: shannah/jdeploy@master
        with:
          github_token: ${{ github.token }}
          jdeploy_version: '5.3.0-dev.0'
